{
  "openapi": "3.0.0",
  "info": {
    "title": "sm",
    "version": "0.0.1",
    "description": "Storage Management of Maintenance Department",
    "contact": {
      "name": "jlsOsorio",
      "email": "joao_lso@hotmail.com"
    }
  },
  "paths": {
    "/inputoutputs/count": {
      "get": {
        "x-controller-name": "InputoutputController",
        "x-operation-name": "count",
        "tags": [
          "InputoutputController"
        ],
        "responses": {
          "200": {
            "description": "Inputoutput model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Inputoutput.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Inputoutput>"
                }
              }
            }
          }
        ],
        "operationId": "InputoutputController.count"
      }
    },
    "/inputoutputs/{id}": {
      "put": {
        "x-controller-name": "InputoutputController",
        "x-operation-name": "replaceById",
        "tags": [
          "InputoutputController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Inputoutput PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Inputoutput"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "InputoutputController.replaceById"
      },
      "patch": {
        "x-controller-name": "InputoutputController",
        "x-operation-name": "updateById",
        "tags": [
          "InputoutputController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Inputoutput PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputoutputPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "InputoutputController.updateById"
      },
      "get": {
        "x-controller-name": "InputoutputController",
        "x-operation-name": "findById",
        "tags": [
          "InputoutputController"
        ],
        "responses": {
          "200": {
            "description": "Inputoutput model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InputoutputWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inputoutput.Filter"
                }
              }
            }
          }
        ],
        "operationId": "InputoutputController.findById"
      },
      "delete": {
        "x-controller-name": "InputoutputController",
        "x-operation-name": "deleteById",
        "tags": [
          "InputoutputController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Inputoutput DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "InputoutputController.deleteById"
      }
    },
    "/inputoutputs": {
      "post": {
        "x-controller-name": "InputoutputController",
        "x-operation-name": "create",
        "tags": [
          "InputoutputController"
        ],
        "responses": {
          "200": {
            "description": "Inputoutput model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inputoutput"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewInputoutput"
              }
            }
          }
        },
        "operationId": "InputoutputController.create"
      },
      "get": {
        "x-controller-name": "InputoutputController",
        "x-operation-name": "find",
        "tags": [
          "InputoutputController"
        ],
        "responses": {
          "200": {
            "description": "Array of Inputoutput model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InputoutputWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inputoutput.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "InputoutputController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/products/count": {
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "count",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Product.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Product>"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.count"
      }
    },
    "/products/{id}/inputoutputs": {
      "get": {
        "x-controller-name": "ProductInputoutputController",
        "x-operation-name": "find",
        "tags": [
          "ProductInputoutputController"
        ],
        "responses": {
          "200": {
            "description": "Array of Product has many Inputoutput",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Inputoutput"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "ProductInputoutputController.find"
      }
    },
    "/products/{id}": {
      "put": {
        "x-controller-name": "ProductController",
        "x-operation-name": "replaceById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductController.replaceById"
      },
      "patch": {
        "x-controller-name": "ProductController",
        "x-operation-name": "updateById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductController.updateById"
      },
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "findById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.findById"
      },
      "delete": {
        "x-controller-name": "ProductController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Product DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "ProductController.deleteById"
      }
    },
    "/products": {
      "post": {
        "x-controller-name": "ProductController",
        "x-operation-name": "create",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Product model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "operationId": "ProductController.create"
      },
      "get": {
        "x-controller-name": "ProductController",
        "x-operation-name": "find",
        "tags": [
          "ProductController"
        ],
        "responses": {
          "200": {
            "description": "Array of Product model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ProductController.find"
      }
    },
    "/productstorages": {
      "get": {
        "x-controller-name": "ProductstorageController",
        "x-operation-name": "find",
        "tags": [
          "ProductstorageController"
        ],
        "responses": {
          "200": {
            "description": "Array of Productstorage model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductstorageWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Productstorage.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductstorageController.find"
      }
    },
    "/storages/count": {
      "get": {
        "x-controller-name": "StorageController",
        "x-operation-name": "count",
        "tags": [
          "StorageController"
        ],
        "responses": {
          "200": {
            "description": "Storage model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Storage.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Storage>"
                }
              }
            }
          }
        ],
        "operationId": "StorageController.count"
      }
    },
    "/storages/{id}/productstorages": {
      "get": {
        "x-controller-name": "StorageProductstorageController",
        "x-operation-name": "find",
        "tags": [
          "StorageProductstorageController"
        ],
        "responses": {
          "200": {
            "description": "Array of Storage has many Productstorage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Productstorage"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "StorageProductstorageController.find"
      }
    },
    "/storages/{id}": {
      "put": {
        "x-controller-name": "StorageController",
        "x-operation-name": "replaceById",
        "tags": [
          "StorageController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Storage PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Storage"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "StorageController.replaceById"
      },
      "patch": {
        "x-controller-name": "StorageController",
        "x-operation-name": "updateById",
        "tags": [
          "StorageController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Storage PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoragePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "StorageController.updateById"
      },
      "get": {
        "x-controller-name": "StorageController",
        "x-operation-name": "findById",
        "tags": [
          "StorageController"
        ],
        "responses": {
          "200": {
            "description": "Storage model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storage.Filter"
                }
              }
            }
          }
        ],
        "operationId": "StorageController.findById"
      },
      "delete": {
        "x-controller-name": "StorageController",
        "x-operation-name": "deleteById",
        "tags": [
          "StorageController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Storage DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "StorageController.deleteById"
      }
    },
    "/storages": {
      "post": {
        "x-controller-name": "StorageController",
        "x-operation-name": "create",
        "tags": [
          "StorageController"
        ],
        "responses": {
          "200": {
            "description": "Storage model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storage"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewStorage"
              }
            }
          }
        },
        "operationId": "StorageController.create"
      },
      "get": {
        "x-controller-name": "StorageController",
        "x-operation-name": "find",
        "tags": [
          "StorageController"
        ],
        "responses": {
          "200": {
            "description": "Array of Storage model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storage.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "StorageController.find"
      }
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000"
    }
  ],
  "components": {
    "schemas": {
      "Inputoutput": {
        "title": "Inputoutput",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "date_time": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "operation": {
            "type": "number"
          },
          "storage_id": {
            "type": "number"
          },
          "product_id": {
            "type": "number"
          }
        },
        "required": [
          "date_time",
          "quantity",
          "operation"
        ],
        "additionalProperties": false
      },
      "NewInputoutput": {
        "title": "NewInputoutput",
        "type": "object",
        "description": "(tsType: Omit<Inputoutput, 'id'>, schemaOptions: { title: 'NewInputoutput', exclude: [ 'id' ] })",
        "properties": {
          "date_time": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "operation": {
            "type": "number"
          },
          "storage_id": {
            "type": "number"
          },
          "product_id": {
            "type": "number"
          }
        },
        "required": [
          "date_time",
          "quantity",
          "operation"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Inputoutput, 'id'>"
      },
      "InputoutputWithRelations": {
        "title": "InputoutputWithRelations",
        "type": "object",
        "description": "(tsType: InputoutputWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "date_time": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "operation": {
            "type": "number"
          },
          "storage_id": {
            "type": "number"
          },
          "product_id": {
            "type": "number"
          }
        },
        "required": [
          "date_time",
          "quantity",
          "operation"
        ],
        "additionalProperties": false,
        "x-typescript-type": "InputoutputWithRelations"
      },
      "InputoutputPartial": {
        "title": "InputoutputPartial",
        "type": "object",
        "description": "(tsType: Partial<Inputoutput>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "date_time": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "operation": {
            "type": "number"
          },
          "storage_id": {
            "type": "number"
          },
          "product_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Inputoutput>"
      },
      "Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uprice": {
            "type": "number"
          },
          "stock": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "type",
          "uprice"
        ],
        "additionalProperties": false
      },
      "NewProduct": {
        "title": "NewProduct",
        "type": "object",
        "description": "(tsType: Omit<Product, 'id'>, schemaOptions: { title: 'NewProduct', exclude: [ 'id' ] })",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uprice": {
            "type": "number"
          },
          "stock": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "type",
          "uprice"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Product, 'id'>"
      },
      "ProductstorageWithRelations": {
        "title": "ProductstorageWithRelations",
        "type": "object",
        "description": "(tsType: ProductstorageWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "storage_id": {
            "type": "number"
          },
          "product_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "ProductstorageWithRelations"
      },
      "ProductWithRelations": {
        "title": "ProductWithRelations",
        "type": "object",
        "description": "(tsType: ProductWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uprice": {
            "type": "number"
          },
          "stock": {
            "type": "number"
          },
          "productIO": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputoutputWithRelations"
            }
          },
          "productPS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductstorageWithRelations"
            }
          }
        },
        "required": [
          "name",
          "type",
          "uprice"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductWithRelations"
      },
      "ProductPartial": {
        "title": "ProductPartial",
        "type": "object",
        "description": "(tsType: Partial<Product>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uprice": {
            "type": "number"
          },
          "stock": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Product>"
      },
      "Productstorage": {
        "title": "Productstorage",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "storage_id": {
            "type": "number"
          },
          "product_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Storage": {
        "title": "Storage",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "corridor": {
            "type": "number"
          },
          "shelf": {
            "type": "number"
          },
          "box": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "corridor",
          "shelf",
          "box",
          "name"
        ],
        "additionalProperties": false
      },
      "NewStorage": {
        "title": "NewStorage",
        "type": "object",
        "description": "(tsType: Omit<Storage, 'id'>, schemaOptions: { title: 'NewStorage', exclude: [ 'id' ] })",
        "properties": {
          "corridor": {
            "type": "number"
          },
          "shelf": {
            "type": "number"
          },
          "box": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "corridor",
          "shelf",
          "box",
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Storage, 'id'>"
      },
      "StorageWithRelations": {
        "title": "StorageWithRelations",
        "type": "object",
        "description": "(tsType: StorageWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "corridor": {
            "type": "number"
          },
          "shelf": {
            "type": "number"
          },
          "box": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "storageIO": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputoutputWithRelations"
            }
          },
          "storagesPS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductstorageWithRelations"
            }
          }
        },
        "required": [
          "corridor",
          "shelf",
          "box",
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "StorageWithRelations"
      },
      "StoragePartial": {
        "title": "StoragePartial",
        "type": "object",
        "description": "(tsType: Partial<Storage>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "corridor": {
            "type": "number"
          },
          "shelf": {
            "type": "number"
          },
          "box": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Storage>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "Inputoutput.Filter": {
        "type": "object",
        "title": "Inputoutput.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "date_time": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "operation": {
                    "type": "boolean"
                  },
                  "storage_id": {
                    "type": "boolean"
                  },
                  "product_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "date_time",
                    "quantity",
                    "operation",
                    "storage_id",
                    "product_id"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Inputoutput.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Inputoutput>"
      },
      "Inputoutput.Filter1": {
        "type": "object",
        "title": "Inputoutput.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Inputoutput.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "date_time": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "operation": {
                    "type": "boolean"
                  },
                  "storage_id": {
                    "type": "boolean"
                  },
                  "product_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "date_time",
                    "quantity",
                    "operation",
                    "storage_id",
                    "product_id"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Inputoutput.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Inputoutput>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Product.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Product.ScopeFilter"
      },
      "Product.IncludeFilter.Items": {
        "title": "Product.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Product.ScopeFilter"
          }
        }
      },
      "Product.Filter": {
        "type": "object",
        "title": "Product.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "uprice": {
                    "type": "boolean"
                  },
                  "stock": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "type",
                    "uprice",
                    "stock"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Product.Fields"
          },
          "include": {
            "title": "Product.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Product.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Product>"
      },
      "Product.Filter1": {
        "type": "object",
        "title": "Product.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Product.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "uprice": {
                    "type": "boolean"
                  },
                  "stock": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "type",
                    "uprice",
                    "stock"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Product.Fields"
          },
          "include": {
            "title": "Product.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Product.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Product>"
      },
      "Productstorage.Filter": {
        "type": "object",
        "title": "Productstorage.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Productstorage.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "storage_id": {
                    "type": "boolean"
                  },
                  "product_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "storage_id",
                    "product_id"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Productstorage.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Productstorage>"
      },
      "Storage.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Storage.ScopeFilter"
      },
      "Storage.IncludeFilter.Items": {
        "title": "Storage.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Storage.ScopeFilter"
          }
        }
      },
      "Storage.Filter": {
        "type": "object",
        "title": "Storage.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "corridor": {
                    "type": "boolean"
                  },
                  "shelf": {
                    "type": "boolean"
                  },
                  "box": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "corridor",
                    "shelf",
                    "box",
                    "name"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Storage.Fields"
          },
          "include": {
            "title": "Storage.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Storage.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Storage>"
      },
      "Storage.Filter1": {
        "type": "object",
        "title": "Storage.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Storage.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "corridor": {
                    "type": "boolean"
                  },
                  "shelf": {
                    "type": "boolean"
                  },
                  "box": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "corridor",
                    "shelf",
                    "box",
                    "name"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Storage.Fields"
          },
          "include": {
            "title": "Storage.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Storage.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Storage>"
      }
    }
  }
}